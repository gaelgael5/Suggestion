//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Suggestion.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Bb.Suggestion.SuggestionParser {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class SuggestionLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, DIGIT=12, AND=13, ANDALSO=14, OR=15, XOR=16, NOT=17, 
		K_NULL=18, K_CURRENT_TIME=19, K_CURRENT_DATE=20, K_CURRENT_TIMESTAMP=21, 
		IDENTIFIER=22;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "DIGIT", "AND", "ANDALSO", "OR", "XOR", "NOT", "K_NULL", 
		"K_CURRENT_TIME", "K_CURRENT_DATE", "K_CURRENT_TIMESTAMP", "IDENTIFIER"
	};


	public SuggestionLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SuggestionLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'WHERE'", "'('", "')'", "','", "'-'", "'.'", "':'", "'''", 
		"''''", "'null'", null, "'&'", "'&&'", "'|'", "'||'", "'!'", "'NULL'", 
		"'CURRENT_TIME'", "'CURRENT_DATE'", "'CURRENT_TIMESTAMP'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"DIGIT", "AND", "ANDALSO", "OR", "XOR", "NOT", "K_NULL", "K_CURRENT_TIME", 
		"K_CURRENT_DATE", "K_CURRENT_TIMESTAMP", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Suggestion.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static SuggestionLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x18', '\xB1', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x16', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\a', '\x17', '\x91', 
		'\n', '\x17', '\f', '\x17', '\xE', '\x17', '\x94', '\v', '\x17', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\a', 
		'\x17', '\x9B', '\n', '\x17', '\f', '\x17', '\xE', '\x17', '\x9E', '\v', 
		'\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x17', '\a', '\x17', '\xA3', 
		'\n', '\x17', '\f', '\x17', '\xE', '\x17', '\xA6', '\v', '\x17', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x17', '\a', '\x17', '\xAB', '\n', '\x17', 
		'\f', '\x17', '\xE', '\x17', '\xAE', '\v', '\x17', '\x5', '\x17', '\xB0', 
		'\n', '\x17', '\x2', '\x2', '\x18', '\x3', '\x3', '\x5', '\x4', '\a', 
		'\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', 
		'\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', 
		'\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', '\x14', 
		'\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', '\x3', '\x2', '\b', 
		'\x3', '\x2', '\x32', ';', '\x3', '\x2', '$', '$', '\x3', '\x2', '\x62', 
		'\x62', '\x3', '\x2', '_', '_', '\x5', '\x2', '\x43', '\\', '\x61', '\x61', 
		'\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', '\\', '\x61', '\x61', 
		'\x63', '|', '\x2', '\xB9', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', 
		'\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'/', '\x3', '\x2', '\x2', '\x2', '\x5', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\a', '\x37', '\x3', '\x2', '\x2', '\x2', '\t', '\x39', '\x3', '\x2', 
		'\x2', '\x2', '\v', ';', '\x3', '\x2', '\x2', '\x2', '\r', '=', '\x3', 
		'\x2', '\x2', '\x2', '\xF', '?', '\x3', '\x2', '\x2', '\x2', '\x11', '\x41', 
		'\x3', '\x2', '\x2', '\x2', '\x13', '\x43', '\x3', '\x2', '\x2', '\x2', 
		'\x15', '\x45', '\x3', '\x2', '\x2', '\x2', '\x17', 'H', '\x3', '\x2', 
		'\x2', '\x2', '\x19', 'M', '\x3', '\x2', '\x2', '\x2', '\x1B', 'O', '\x3', 
		'\x2', '\x2', '\x2', '\x1D', 'Q', '\x3', '\x2', '\x2', '\x2', '\x1F', 
		'T', '\x3', '\x2', '\x2', '\x2', '!', 'V', '\x3', '\x2', '\x2', '\x2', 
		'#', 'Y', '\x3', '\x2', '\x2', '\x2', '%', '[', '\x3', '\x2', '\x2', '\x2', 
		'\'', '`', '\x3', '\x2', '\x2', '\x2', ')', 'm', '\x3', '\x2', '\x2', 
		'\x2', '+', 'z', '\x3', '\x2', '\x2', '\x2', '-', '\xAF', '\x3', '\x2', 
		'\x2', '\x2', '/', '\x30', '\a', '=', '\x2', '\x2', '\x30', '\x4', '\x3', 
		'\x2', '\x2', '\x2', '\x31', '\x32', '\a', 'Y', '\x2', '\x2', '\x32', 
		'\x33', '\a', 'J', '\x2', '\x2', '\x33', '\x34', '\a', 'G', '\x2', '\x2', 
		'\x34', '\x35', '\a', 'T', '\x2', '\x2', '\x35', '\x36', '\a', 'G', '\x2', 
		'\x2', '\x36', '\x6', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\a', 
		'*', '\x2', '\x2', '\x38', '\b', '\x3', '\x2', '\x2', '\x2', '\x39', ':', 
		'\a', '+', '\x2', '\x2', ':', '\n', '\x3', '\x2', '\x2', '\x2', ';', '<', 
		'\a', '.', '\x2', '\x2', '<', '\f', '\x3', '\x2', '\x2', '\x2', '=', '>', 
		'\a', '/', '\x2', '\x2', '>', '\xE', '\x3', '\x2', '\x2', '\x2', '?', 
		'@', '\a', '\x30', '\x2', '\x2', '@', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'\x41', '\x42', '\a', '<', '\x2', '\x2', '\x42', '\x12', '\x3', '\x2', 
		'\x2', '\x2', '\x43', '\x44', '\a', ')', '\x2', '\x2', '\x44', '\x14', 
		'\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', ')', '\x2', '\x2', '\x46', 
		'G', '\a', ')', '\x2', '\x2', 'G', '\x16', '\x3', '\x2', '\x2', '\x2', 
		'H', 'I', '\a', 'p', '\x2', '\x2', 'I', 'J', '\a', 'w', '\x2', '\x2', 
		'J', 'K', '\a', 'n', '\x2', '\x2', 'K', 'L', '\a', 'n', '\x2', '\x2', 
		'L', '\x18', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\t', '\x2', '\x2', 
		'\x2', 'N', '\x1A', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\a', '(', '\x2', 
		'\x2', 'P', '\x1C', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\a', '(', '\x2', 
		'\x2', 'R', 'S', '\a', '(', '\x2', '\x2', 'S', '\x1E', '\x3', '\x2', '\x2', 
		'\x2', 'T', 'U', '\a', '~', '\x2', '\x2', 'U', ' ', '\x3', '\x2', '\x2', 
		'\x2', 'V', 'W', '\a', '~', '\x2', '\x2', 'W', 'X', '\a', '~', '\x2', 
		'\x2', 'X', '\"', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\a', '#', '\x2', 
		'\x2', 'Z', '$', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\a', 'P', '\x2', 
		'\x2', '\\', ']', '\a', 'W', '\x2', '\x2', ']', '^', '\a', 'N', '\x2', 
		'\x2', '^', '_', '\a', 'N', '\x2', '\x2', '_', '&', '\x3', '\x2', '\x2', 
		'\x2', '`', '\x61', '\a', '\x45', '\x2', '\x2', '\x61', '\x62', '\a', 
		'W', '\x2', '\x2', '\x62', '\x63', '\a', 'T', '\x2', '\x2', '\x63', '\x64', 
		'\a', 'T', '\x2', '\x2', '\x64', '\x65', '\a', 'G', '\x2', '\x2', '\x65', 
		'\x66', '\a', 'P', '\x2', '\x2', '\x66', 'g', '\a', 'V', '\x2', '\x2', 
		'g', 'h', '\a', '\x61', '\x2', '\x2', 'h', 'i', '\a', 'V', '\x2', '\x2', 
		'i', 'j', '\a', 'K', '\x2', '\x2', 'j', 'k', '\a', 'O', '\x2', '\x2', 
		'k', 'l', '\a', 'G', '\x2', '\x2', 'l', '(', '\x3', '\x2', '\x2', '\x2', 
		'm', 'n', '\a', '\x45', '\x2', '\x2', 'n', 'o', '\a', 'W', '\x2', '\x2', 
		'o', 'p', '\a', 'T', '\x2', '\x2', 'p', 'q', '\a', 'T', '\x2', '\x2', 
		'q', 'r', '\a', 'G', '\x2', '\x2', 'r', 's', '\a', 'P', '\x2', '\x2', 
		's', 't', '\a', 'V', '\x2', '\x2', 't', 'u', '\a', '\x61', '\x2', '\x2', 
		'u', 'v', '\a', '\x46', '\x2', '\x2', 'v', 'w', '\a', '\x43', '\x2', '\x2', 
		'w', 'x', '\a', 'V', '\x2', '\x2', 'x', 'y', '\a', 'G', '\x2', '\x2', 
		'y', '*', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\a', '\x45', '\x2', '\x2', 
		'{', '|', '\a', 'W', '\x2', '\x2', '|', '}', '\a', 'T', '\x2', '\x2', 
		'}', '~', '\a', 'T', '\x2', '\x2', '~', '\x7F', '\a', 'G', '\x2', '\x2', 
		'\x7F', '\x80', '\a', 'P', '\x2', '\x2', '\x80', '\x81', '\a', 'V', '\x2', 
		'\x2', '\x81', '\x82', '\a', '\x61', '\x2', '\x2', '\x82', '\x83', '\a', 
		'V', '\x2', '\x2', '\x83', '\x84', '\a', 'K', '\x2', '\x2', '\x84', '\x85', 
		'\a', 'O', '\x2', '\x2', '\x85', '\x86', '\a', 'G', '\x2', '\x2', '\x86', 
		'\x87', '\a', 'U', '\x2', '\x2', '\x87', '\x88', '\a', 'V', '\x2', '\x2', 
		'\x88', '\x89', '\a', '\x43', '\x2', '\x2', '\x89', '\x8A', '\a', 'O', 
		'\x2', '\x2', '\x8A', '\x8B', '\a', 'R', '\x2', '\x2', '\x8B', ',', '\x3', 
		'\x2', '\x2', '\x2', '\x8C', '\x92', '\a', '$', '\x2', '\x2', '\x8D', 
		'\x91', '\n', '\x3', '\x2', '\x2', '\x8E', '\x8F', '\a', '$', '\x2', '\x2', 
		'\x8F', '\x91', '\a', '$', '\x2', '\x2', '\x90', '\x8D', '\x3', '\x2', 
		'\x2', '\x2', '\x90', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x91', '\x94', 
		'\x3', '\x2', '\x2', '\x2', '\x92', '\x90', '\x3', '\x2', '\x2', '\x2', 
		'\x92', '\x93', '\x3', '\x2', '\x2', '\x2', '\x93', '\x95', '\x3', '\x2', 
		'\x2', '\x2', '\x94', '\x92', '\x3', '\x2', '\x2', '\x2', '\x95', '\xB0', 
		'\a', '$', '\x2', '\x2', '\x96', '\x9C', '\a', '\x62', '\x2', '\x2', '\x97', 
		'\x9B', '\n', '\x4', '\x2', '\x2', '\x98', '\x99', '\a', '\x62', '\x2', 
		'\x2', '\x99', '\x9B', '\a', '\x62', '\x2', '\x2', '\x9A', '\x97', '\x3', 
		'\x2', '\x2', '\x2', '\x9A', '\x98', '\x3', '\x2', '\x2', '\x2', '\x9B', 
		'\x9E', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9A', '\x3', '\x2', '\x2', 
		'\x2', '\x9C', '\x9D', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9F', '\x3', 
		'\x2', '\x2', '\x2', '\x9E', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9F', 
		'\xB0', '\a', '\x62', '\x2', '\x2', '\xA0', '\xA4', '\a', ']', '\x2', 
		'\x2', '\xA1', '\xA3', '\n', '\x5', '\x2', '\x2', '\xA2', '\xA1', '\x3', 
		'\x2', '\x2', '\x2', '\xA3', '\xA6', '\x3', '\x2', '\x2', '\x2', '\xA4', 
		'\xA2', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA5', '\x3', '\x2', '\x2', 
		'\x2', '\xA5', '\xA7', '\x3', '\x2', '\x2', '\x2', '\xA6', '\xA4', '\x3', 
		'\x2', '\x2', '\x2', '\xA7', '\xB0', '\a', '_', '\x2', '\x2', '\xA8', 
		'\xAC', '\t', '\x6', '\x2', '\x2', '\xA9', '\xAB', '\t', '\a', '\x2', 
		'\x2', '\xAA', '\xA9', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAE', '\x3', 
		'\x2', '\x2', '\x2', '\xAC', '\xAA', '\x3', '\x2', '\x2', '\x2', '\xAC', 
		'\xAD', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xB0', '\x3', '\x2', '\x2', 
		'\x2', '\xAE', '\xAC', '\x3', '\x2', '\x2', '\x2', '\xAF', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '\xAF', '\x96', '\x3', '\x2', '\x2', '\x2', '\xAF', 
		'\xA0', '\x3', '\x2', '\x2', '\x2', '\xAF', '\xA8', '\x3', '\x2', '\x2', 
		'\x2', '\xB0', '.', '\x3', '\x2', '\x2', '\x2', '\n', '\x2', '\x90', '\x92', 
		'\x9A', '\x9C', '\xA4', '\xAC', '\xAF', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Bb.Suggestion.SuggestionParser
